{"version":3,"sources":["components/Note.js","components/AddNote.js","components/Notes.js","components/Header.js","components/Search.js","App.js","index.js"],"names":["Note","id","title","text","date","handleDeleteNote","Paper","style","whiteSpace","backgroundColor","padding","shadow","radius","Text","Title","order","ActionIcon","color","variant","float","onClick","Space","h","AddNote","handleAddNote","useState","noteTitle","setNoteTitle","noteText","setNoteText","Divider","TextInput","placeholder","size","required","value","onChange","event","target","Textarea","length","Button","trim","Notes","notes","SimpleGrid","cols","breakpoints","maxWidth","spacing","map","note","Header","Search","handleSearchNote","App","Math","floor","random","setNotes","searchCriteria","setSearchCriteria","useEffect","savedNotes","JSON","parse","localStorage","getItem","setItem","stringify","MantineProvider","theme","colorScheme","Container","filter","toLowerCase","includes","Date","newNote","toLocaleDateString","newNotes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2c991e14.chunk.js","sourcesContent":["import React from 'react'\nimport { Paper, Title, Text, Space, ActionIcon } from '@mantine/core';\nimport { FaTrashAlt } from 'react-icons/fa';\n\nconst Note = ({ id, title, text, date, handleDeleteNote }) => {\n    return (\n        <div>\n            <Paper \n            style={{ whiteSpace: 'pre-wrap', backgroundColor: 'rgb(18 69 162 / 45%)' }} \n            padding=\"md\" \n            shadow=\"sm\" \n            radius=\"md\"\n            >\n                <Text>\n                    <Title order={5}>{title}</Title>\n                </Text>\n                <Text>\n                    {text}\n                </Text>\n                <Text>\n                    Created on {date}\n                    <ActionIcon color=\"red\" variant=\"filled\" style={{ float: 'right' }}>\n                    <FaTrashAlt onClick={() => handleDeleteNote(id)}/>\n                    </ActionIcon>\n                </Text>\n            </Paper>\n            <Space h=\"md\" />\n        </div>\n    )\n}\n\nexport default Note\n","import React, { useState } from 'react'\nimport { TextInput, Textarea, Text, Button, Space, Divider } from '@mantine/core';\n\nconst AddNote = ({ handleAddNote }) => {\n    const [noteTitle, setNoteTitle] = useState(\"\");\n    const [noteText, setNoteText] = useState(\"\");\n    const characterLimit = 200;\n\n    const handleChange = (event) => {\n        if (characterLimit - event.target.value.length >= 0) {\n            setNoteText(event.target.value);\n        }\n    }\n    const handleTitleChange = (event) => {\n        setNoteTitle(event.target.value);\n    }\n    const handleSaveClick = () => {\n        if (noteText.trim().length > 0) {\n            handleAddNote(noteText, noteTitle);\n            setNoteText('');\n            setNoteTitle('');\n\n        }\n    }\n    return (\n        <div>\n            <Divider />\n            <TextInput\n            placeholder=\"Give your note a title\"\n            variant=\"unstyled\"\n            size=\"xl\"\n            required\n            value={noteTitle}\n            onChange={handleTitleChange}\n            />\n            <Textarea\n            placeholder=\"Type what you want to have on your note\"\n            variant=\"unstyled\"\n            size=\"lg\"\n            required\n            value={noteText}\n            onChange={handleChange}\n            />\n            \n            <>\n            <Button variant=\"light\" color=\"violet\" onClick={handleSaveClick}>\n            Create note\n            </Button>\n            <Text style={{ float: 'right' }}>{characterLimit - noteText.length} characters left</Text>\n            <Space h=\"md\" />\n            <Divider />\n            <Space h=\"md\" />\n            </>\n        </div>\n    )\n}\n\nexport default AddNote\n","import React from 'react'\nimport Note from './Note'\nimport AddNote from './AddNote';\nimport { SimpleGrid } from '@mantine/core';\n\nconst Notes = ({ notes, handleAddNote, handleDeleteNote }) => {\n    return (\n        <div>\n            <AddNote handleAddNote={handleAddNote} />\n            <SimpleGrid \n            cols={3}\n            breakpoints={[\n                { maxWidth: 'md', cols: 3, spacing: 'md' },\n                { maxWidth: 'sm', cols: 2, spacing: 'sm' },\n                { maxWidth: 'xs', cols: 1, spacing: 'sm' },\n              ]}\n            >\n            {notes.map((note) => ( \n                <Note \n                id={note.id} \n                title={note.title} \n                text={note.text} \n                date={note.date}\n                handleDeleteNote={handleDeleteNote}\n                />\n            ))}\n            </SimpleGrid>\n        </div>\n    )\n}\n\nexport default Notes\n","import React from 'react'\nimport { Title } from '@mantine/core';\n\nconst Header = () => {\n    return (\n        <div>\n            <Title order={1}>Sticksy üìù</Title>\n            <Title order={4}>An easy way to keep track of your notes</Title>\n            \n        </div>\n    )\n}\n\nexport default Header","import React from 'react'\nimport { TextInput } from '@mantine/core';\n\nconst Search = ({ handleSearchNote, notes }) => {\n\n    return (\n        <div>\n            <TextInput\n            placeholder=\"Search\"\n            variant=\"unstyled\"\n            size=\"lg\"\n            onChange={(event) => handleSearchNote(event.target.value)}\n            />\n        </div>\n    )\n}\n\nexport default Search\n","import './App.css';\nimport React, { useState, useEffect } from 'react'\nimport Notes from './components/Notes';\nimport Header from './components/Header'\nimport Search from './components/Search';\nimport { Container } from '@mantine/core';\nimport { MantineProvider } from '@mantine/core';\n\nconst App = () => {\n  const [notes, setNotes] = useState([{\n    id: Math.floor(Math.random() * 100000000),\n    title: \"Note title\",\n    text: \"This is the note text\",\n    date: \"Wed Oct 20 2021\"\n  }])\n\n  const [searchCriteria, setSearchCriteria] = useState('');\n\n  useEffect(() => {\n    const savedNotes = JSON.parse(localStorage.getItem('react-notes-app-data')\n    );\n    if (savedNotes) {\n      setNotes(savedNotes);\n    }\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem('react-notes-app-data', JSON.stringify(notes))\n  }, [notes])\n\n  const addNote = (text, title) => {\n    const date = new Date();\n    const newNote = {\n      id: Math.floor(Math.random() * 100000000),\n      title: title,\n      text: text,\n      date: date.toLocaleDateString()\n    }\n    const newNotes = [...notes, newNote];\n    setNotes(newNotes);\n  }\n\n  const deleteNote = (id) => {\n    const newNotes = notes.filter((note) => note.id !== id);\n    setNotes(newNotes);\n\n  }\n\n  return (\n    <div>\n      <MantineProvider theme={{ colorScheme: 'dark' }}>\n      <Container>\n      <Header />\n      <Search handleSearchNote={setSearchCriteria} />\n      <Notes \n      notes={notes.filter((note) => note.text.toLowerCase().includes(searchCriteria))}\n      handleAddNote={addNote} \n      handleDeleteNote={deleteNote}\n      />\n      </Container>\n      </MantineProvider>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}